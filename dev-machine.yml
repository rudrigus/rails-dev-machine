---
- name: Configure machine for rails development
  hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    force: no
    initialize: yes
    root: /
    rvm_gpg_key1: "409B6B1796C275462A1703113804BB82D39DC0E3"
    rvm_gpg_key2: "7D2BAF1CF37B13E2069D6956105BD0E739499BDB"
    rvm_ver: "2.5.8"
    project_dir: "/home/{{ user }}/projetos/sgm"

  pre_tasks:
    - name: Install the requirements
      apt:
        pkg:
          - git
          - git-cola
          - build-essential
          - autoconf
          - bison
          - libssl-dev
          - libyaml-dev
          - libreadline-dev
          - zlib1g-dev
          - libncurses5-dev
          - libffi-dev
          - libgdbm-dev
          - libpq-dev
          - curl
          - ruby-full
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
          - direnv
          - jq

  tasks:
    - name: Add repositories
      shell: |
        apt remove docker docker-engine docker.io containerd runc
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list

    - name: Install packets
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - yarn
          - apt-transport-https

    - name: Add RVM key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: "{{ rvm_gpg_key1 }}"
        id: "{{ rvm_gpg_key2 }}"

    - name: Install RVM
      command: \curl -sSL https://get.rvm.io | bash -s stable
      args:
        creates: /usr/local/rvm

    - name: Install ruby
      shell: |
        /bin/bash --login -c 'source /home/{{ user }}/.bashrc
        rvm install {{ rvm_ver }}
        rvm --default use {{ rvm_ver }}
        '
      args:
        creates: /home/{{ user }}/.rvm/gems/ruby-{{ rvm_ver }}
      become: yes
      become_user: "{{ user }}"
      args:
        executable: /bin/bash

    - name: Install aws-cli
      pip:
        name: awscli

    - name: Config Docker
      user:
        name: "{{ user }}"
        groups: docker
        append: yes

    - name: Config Direnv
      lineinfile:
        path: /home/{{ user }}/{{ item.filename }}
        line: "{{ item.text }}"
        state: present
        create: yes
        group: "{{ user }}"
        owner: "{{ user }}"
      loop:
        - { filename: '.bashrc', text: 'eval "$(direnv hook bash)"' }
        - { filename: '.envrc', text: 'export MONGO_PREFIX="docker exec -i sgm-mongo"' }

    - name: Config Direnv part2
      become: yes  
      become_user: "{{ user }}"
      command: direnv allow

    - name: Bundle
      shell: |
        /bin/bash --login -c 'rvm requirements
        gem install bundler
        bundle'
      become: yes
      become_user: "{{ user }}"
      args:
        chdir: "{{ project_dir }}"

    - name: Get AWS key
      pause:
        prompt: "Enter AWS access key id"
      register: aws_key_id

    - name: Get AWS credentials
      pause:
        prompt: "Enter AWS secret access key"
        echo: no
      register: aws_secret_key

    - name: Get AWS region
      pause:
        prompt: "Enter AWS default region"
      register: aws_default_region

    - name: Config aws-cli
      shell: |
        aws configure set aws_access_key_id {{ aws_key_id.user_input }}
        aws configure set aws_secret_access_key {{ aws_secret_key.user_input }}
        aws configure set default.region {{ aws_default_region.user_input }}
      become: yes
      become_user: "{{ user }}"
      args:
        chdir: "{{ project_dir }}"